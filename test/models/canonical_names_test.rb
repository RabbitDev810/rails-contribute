require 'test_helper'

module Credits
  class AliasesTest < ActiveSupport::TestCase
    def canonical_name_for(name, email=nil)
      NamesManager.canonical_name_for(name, email)
    end

    test 'canonical names for known aliases' do
      assert_equal 'Aaron Eisenberger',               canonical_name_for('Aaron')
      assert_equal 'Aaron Namba',                     canonical_name_for('anamba')
      assert_equal 'Aaron Pfeifer',                   canonical_name_for('obrie')
      assert_equal 'Aaron Todd',                      canonical_name_for('ozzyaaron')
      assert_equal 'Abhay Kumar',                     canonical_name_for('abhay')
      assert_equal 'Abhishek Yadav',                  canonical_name_for('abhishek')
      assert_equal 'Adam Hawkins',                    canonical_name_for('twinturbo')
      assert_equal 'Adam Hawkins',                    canonical_name_for('adman65')
      assert_equal 'Adam Johnson',                    canonical_name_for('adamj')
      assert_equal 'Adam Kramer',                     canonical_name_for("adam\100the-kramers.net")
      assert_equal 'Adam Majer',                      canonical_name_for("adamm\100galacticasoftware.com")
      assert_equal 'Adam Wiggins',                    canonical_name_for('adamwiggins')
      assert_equal 'Adam Williams',                   canonical_name_for('aiwilliams')
      assert_equal 'Adam Williams',                   canonical_name_for('awilliams')
      assert_equal 'Adelle Hartley',                  canonical_name_for("adelle\100bullet.net.au")
      assert_equal 'Aditya Chadha',                   canonical_name_for('Aditya')
      assert_equal 'Aditya Kapoor',                   canonical_name_for('aditya-kapoor')
      assert_equal 'Adrien Coquio',                   canonical_name_for('bobbus')
      assert_equal 'Adrien Siami',                    canonical_name_for('Intrepidd')
      assert_equal 'Agis Anastasopoulos',             canonical_name_for('Agis-')
      assert_equal 'Akio Tajima',                     canonical_name_for('arton')
      assert_equal 'Akio Tajima',                     canonical_name_for('artonx')
      assert_equal 'Akira Ikeda',                     canonical_name_for("ikeda\100dream.big.or.jp")
      assert_equal 'Akira Matsuda',                   canonical_name_for('松田 明')
      assert_equal 'Akira Tagoh',                     canonical_name_for('tagoh')
      assert_equal 'Akshay Gupta',                    canonical_name_for('kitallis')
      assert_equal 'Akshay Vishnoi',                  canonical_name_for('Mr A')
      assert_equal 'Alan Francis',                    canonical_name_for('alancfrancis')
      assert_equal 'Alan Francis',                    canonical_name_for('acf')
      assert_equal 'Alan Francis',                    canonical_name_for("alancfrancis\100gmail.com")
      assert_equal 'Albert Lash',                     canonical_name_for('docunext')
      assert_equal 'Alex Chaffee',                    canonical_name_for('alexch')
      assert_equal 'Alex Mishyn',                     canonical_name_for('amishyn')
      assert_equal 'Alex Pooley',                     canonical_name_for("alex\100msgpad.com")
      assert_equal 'Alex Riabov',                     canonical_name_for('ariabov')
      assert_equal 'Alex Wayne',                      canonical_name_for('Squeegy')
      assert_equal 'Alex Wayne',                      canonical_name_for("rubyonrails\100beautifulpixel.com")
      assert_equal 'Alex Wolfe',                      canonical_name_for("alexkwolfe\100gmail.com")
      assert_equal 'Alexander Baronec',               canonical_name_for('abonec')
      assert_equal 'Alexander Belaev',                canonical_name_for('alexbel')
      assert_equal 'Alexander Borovsky',              canonical_name_for("alex.borovsky\100gmail.com")
      assert_equal 'Alexander Dymo',                  canonical_name_for("dymo\100mk.ukrtelecom.ua")
      assert_equal 'Alexander Dymo',                  canonical_name_for('adymo')
      assert_equal 'Alexander Karmes',                canonical_name_for('90yukke')
      assert_equal 'Alexander Staubo',                canonical_name_for("alex\100byzantine.no")
      assert_equal 'Alexander Staubo',                canonical_name_for("alex\100purefiction.net")
      assert_equal 'Alexander Uvarov',                canonical_name_for('wildchild')
      assert_equal 'Alexey Nikitin',                  canonical_name_for('tank-bohr')
      assert_equal 'Alexey Trofimenko',               canonical_name_for('codesnik')
      assert_equal 'Alexey Zatsepin',                 canonical_name_for('Alexey')
      assert_equal 'Alexey Zatsepin',                 canonical_name_for('alexey')
      assert_equal 'Aliaksey Kandratsenka',           canonical_name_for('Aleksey Kondratenko')
      assert_equal 'Aliaxandr Rahalevich',            canonical_name_for('saksmlz')
      assert_equal 'Aliaxandr Rahalevich',            canonical_name_for('saks')
      assert_equal 'Alvaro Pereyra',                  canonical_name_for('Xenda')
      assert_equal 'Anand Muthukrishnan',             canonical_name_for('Anand')
      assert_equal 'Anatoli Makarevich',              canonical_name_for('Anatoly Makarevich')
      assert_equal 'Andrea Longhi',                   canonical_name_for('spaghetticode')
      assert_equal 'Andrea Longhi',                   canonical_name_for('andrea longhi')
      assert_equal 'Andreas Isaksson',                canonical_name_for('isak')
      assert_equal 'Andreas Wurm',                    canonical_name_for('Kane')
      assert_equal 'Andreas Wurm',                    canonical_name_for('Kanetontli')
      assert_equal 'Andreas Wurm',                    canonical_name_for('kane')
      assert_equal 'Andrew A. Smith',                 canonical_name_for("andy\100tinnedfruit.org")
      assert_equal 'Andrew Bennett',                  canonical_name_for('PotatoSalad')
      assert_equal 'Andrew Chase',                    canonical_name_for('Andrew')
      assert_equal 'Andrew Chase',                    canonical_name_for('acechase')
      assert_equal 'Andrew Evans',                    canonical_name_for('agius')
      assert_equal 'Andrew Grim',                     canonical_name_for('stopdropandrew')
      assert_equal 'Andrew Kaspick',                  canonical_name_for("akaspick\100gmail.com")
      assert_equal 'Andrew Kaspick',                  canonical_name_for('akaspick')
      assert_equal 'Andrew Kaspick',                  canonical_name_for("andrew\100redlinesoftware.com")
      assert_equal 'Andrew Peters',                   canonical_name_for("andrew.john.peters\100gmail.com")
      assert_equal 'Andrew Shcheglov',                canonical_name_for('windock')
      assert_equal 'Andrew White',                    canonical_name_for('pixeltrix')
      assert_equal 'Andrey Morskov',                  canonical_name_for('accessd')
      assert_equal 'Andrey Morskov',                  canonical_name_for('Accessd')
      assert_equal 'Andrey Nering',                   canonical_name_for("andrey.nering\100gmail.com")
      assert_equal 'Andy Lien',                       canonical_name_for("andylien\100gmail.com")
      assert_equal 'Angelo Capilleri',                canonical_name_for('angelo giovanni capilleri')
      assert_equal 'Angelo Capilleri',                canonical_name_for('Angelo capilleri')
      assert_equal 'Anil Kumar Maurya',               canonical_name_for('anilmaurya')
      assert_equal 'Ankit Gupta',                     canonical_name_for('ankit8898')
      assert_equal 'Ankit Gupta',                     canonical_name_for('Ankit Gupta-FIR')
      assert_equal 'Ant Ramm',                        canonical_name_for('antramm')
      assert_equal 'Anthony Alberto',                 canonical_name_for('Anthony')
      assert_equal 'Anthony Eden',                    canonical_name_for('aeden')
      assert_equal 'Anton Cherepanov',                canonical_name_for('davetoxa')
      assert_equal 'Antonio Tapiador del Dujo',       canonical_name_for('Antonio Tapiador')
      assert_equal 'Anuj Dutta',                      canonical_name_for('anuj  dutta')
      assert_equal 'Anup Narkhede',                   canonical_name_for('railsbob')
      assert_equal 'Ara T Howard',                    canonical_name_for('ara.t.howard')
      assert_equal 'Ariejan de Vroom',                canonical_name_for('ariejan')
      assert_equal 'Arkadiusz Holko',                 canonical_name_for('fastred')
      assert_equal 'Arkadiy Zabazhanov',              canonical_name_for('pyromaniac')
      assert_equal 'Artem Avetisyan',                 canonical_name_for('artemave')
      assert_equal 'Artem Kramarenko',                canonical_name_for('artemk')
      assert_equal 'Arthur Neves',                    canonical_name_for('Arthur Nogueira Neves')
      assert_equal 'Arthur Zapparoli',                canonical_name_for('arthurgeek')
      assert_equal 'Arvid Andersson',                 canonical_name_for('arvida')
      assert_equal 'Ashley Moran',                    canonical_name_for("work\100ashleymoran.me.uk")
      assert_equal 'Ask Bjørn Hansen',                canonical_name_for("ask\100develooper.com")
      assert_equal 'Assaf Arkin',                     canonical_name_for("assaf.arkin\100gmail.com")
      assert_equal 'Assaf Arkin',                     canonical_name_for('Assaf')
      assert_equal 'AthonLab',                        canonical_name_for('athonlab')
      assert_equal 'Atsushi Nakamura',                canonical_name_for('alfa-jpn')
      assert_equal 'August Zaitzow Flatby',           canonical_name_for("zaitzow\100gmail.com")
      assert_equal 'August Zajonc',                   canonical_name_for("augustz\100augustz.com")
      assert_equal 'Avner Cohen',                     canonical_name_for('AvnerCohen')
      assert_equal 'Ayose Cazorla',                   canonical_name_for('Ayose')
      assert_equal 'Bagwan Pankaj',                   canonical_name_for('bagwanpankaj')
      assert_equal 'Bas van Klinkenberg',             canonical_name_for("flash\100vanklinkenbergsoftware.nl")
      assert_equal 'Bas van Klinkenberg',             canonical_name_for('Bas Van Klinkenberg')
      assert_equal 'Ben Bangert',                     canonical_name_for("ben\100groovie.org")
      assert_equal 'Ben Sandofsky',                   canonical_name_for('sandofsky')
      assert_equal 'Ben Scofield',                    canonical_name_for('bscofield')
      assert_equal 'Ben Sinclair',                    canonical_name_for("ben\100bensinclair.com")
      assert_equal 'Benedikt Deicke',                 canonical_name_for('benedikt')
      assert_equal 'Benjamin Curtis',                 canonical_name_for("rails\100bencurtis.com")
      assert_equal 'Bermi Ferrer',                    canonical_name_for('bermi')
      assert_equal 'Bert Goethals',                   canonical_name_for('BertG')
      assert_equal 'Blaine Cook',                     canonical_name_for("blaine\100odeo.com")
      assert_equal 'Blaine Cook',                     canonical_name_for('blaine')
      assert_equal 'Blaine Cook',                     canonical_name_for('Blaine')
      assert_equal 'Blair Zajac',                     canonical_name_for("blair\100orcaware.com")
      assert_equal 'Blake Watters',                   canonical_name_for("blake\100near-time.com")
      assert_equal 'Blane Dabney',                    canonical_name_for("mdabney\100cavoksolutions.com")
      assert_equal 'Bob Aman',                        canonical_name_for("bob\100sporkmonger.com")
      assert_equal 'Bob Silva',                       canonical_name_for('BobSilva')
      assert_equal 'Bob Silva',                       canonical_name_for("ruby\100bobsilva.com")
      assert_equal 'Brad Ediger',                     canonical_name_for('bradediger')
      assert_equal 'Brad Ediger',                     canonical_name_for("brad.ediger\100madriska.com")
      assert_equal 'Brad Ediger',                     canonical_name_for("brad\100madriska.com")
      assert_equal 'Brad Ellis',                      canonical_name_for("bellis\100deepthought.org")
      assert_equal 'Brad Greenlee',                   canonical_name_for('bgreenlee')
      assert_equal 'Brad Robertson',                  canonical_name_for('bradrobertson')
      assert_equal 'Brandon Keepers',                 canonical_name_for("brandon\100opensoul.org")
      assert_equal 'Brandon Keepers',                 canonical_name_for('brandon')
      assert_equal 'Brandt Kurowski',                 canonical_name_for("brandt\100kurowski.net")
      assert_equal 'Brendan Baldwin',                 canonical_name_for('brendan')
      assert_equal 'Brent Miller',                    canonical_name_for('Foliosus')
      assert_equal 'Brian Donovan',                   canonical_name_for('eventualbuddha')
      assert_equal 'Brian Donovan',                   canonical_name_for("devslashnull\100gmail.com")
      assert_equal 'Brian Egge',                      canonical_name_for("brianegge\100yahoo.com")
      assert_equal 'Brian Gernhardt',                 canonical_name_for("benji\100silverinsanity.com")
      assert_equal 'Brian Mattern',                   canonical_name_for("rephorm\100rephorm.com")
      assert_equal 'Brian Morearty',                  canonical_name_for('BMorearty')
      assert_equal 'Brian Pearce',                    canonical_name_for('brianp')
      assert_equal 'Bruce Williams',                  canonical_name_for("wbruce\100gmail.com")
      assert_equal 'Bruno Miranda',                   canonical_name_for('brupm')
      assert_equal 'Bryan Helmkamp',                  canonical_name_for('brynary')
      assert_equal 'Bryan Kang',                      canonical_name_for('deepblue')
      assert_equal 'Buddhika Laknath',                canonical_name_for('Laknath')
      assert_equal 'Buddhika Laknath',                canonical_name_for('laknath')
      assert_equal 'Caio Chassot',                    canonical_name_for('caio')
      assert_equal 'Caio Chassot',                    canonical_name_for("k\100v2studio.com")
      assert_equal 'Caleb Tennis',                    canonical_name_for("caleb\100aei-tech.com")
      assert_equal 'Calvin Yu',                       canonical_name_for('cyu')
      assert_equal 'Carina C. Zona',                  canonical_name_for('cczona')
      assert_equal 'Carl Tashian',                    canonical_name_for('tashian')
      assert_equal 'Cássio Marques',                  canonical_name_for('CassioMarques')
      assert_equal 'Cédric Fabianski',                canonical_name_for('Cédric FABIANSKI')
      assert_equal 'Cédric Fabianski',                canonical_name_for('cfabianski')
      assert_equal 'Celestino Gomes',                 canonical_name_for('tinogomes')
      assert_equal 'Cesar Ho',                        canonical_name_for('codafoo')
      assert_equal 'Chad Humphries',                  canonical_name_for('spicycode')
      assert_equal 'Chad Ingram',                     canonical_name_for('matrix9180')
      assert_equal 'Chad Pytel',                      canonical_name_for('cpytel')
      assert_equal 'Chad Woolley',                    canonical_name_for('thewoolleyman')
      assert_equal 'Chaitanya Vellanki',              canonical_name_for('chaitanyav')
      assert_equal 'Charles M. Gerungan',             canonical_name_for("charles.gerungan\100gmail.com")
      assert_equal 'Charles Nutter',                  canonical_name_for("headius\100headius.com")
      assert_equal 'Chas Grundy',                     canonical_name_for('chas')
      assert_equal 'Cheah Chu Yeow',                  canonical_name_for('Chu Yeow')
      assert_equal 'Cheah Chu Yeow',                  canonical_name_for('chuyeow')
      assert_equal 'Choon Keat',                      canonical_name_for("choonkeat\100gmail.com")
      assert_equal 'Choon Keat',                      canonical_name_for('choonkeat')
      assert_equal 'Chris Anderson',                  canonical_name_for('jchris')
      assert_equal 'Chris Brinker',                   canonical_name_for("chris\100chrisbrinker.com")
      assert_equal 'Chris Carter',                    canonical_name_for("cdcarter\100gmail.com")
      assert_equal 'Chris Finne',                     canonical_name_for('chrisfinne')
      assert_equal 'Chris Finne',                     canonical_name_for('chris finne')
      assert_equal 'Chris Hapgood',                   canonical_name_for('cch1')
      assert_equal 'Chris Kampmeier',                 canonical_name_for('kampers')
      assert_equal 'Chris Kampmeier',                 canonical_name_for('chrisk')
      assert_equal 'Chris Kohlbrenner',               canonical_name_for('chriskohlbrenner')
      assert_equal 'Chris McGrath',                   canonical_name_for('octopod')
      assert_equal 'Chris McGrath',                   canonical_name_for('c.r.mcgrath')
      assert_equal 'Chris McGrath',                   canonical_name_for("chris\100octopod.info")
      assert_equal 'Chris McGrath',                   canonical_name_for("c.r.mcgrath\100gmail.com")
      assert_equal 'Chris Mear',                      canonical_name_for("chris\100feedmechocolate.com")
      assert_equal 'Chris Mear',                      canonical_name_for('chrismear')
      assert_equal "Chris O'Sullivan",                canonical_name_for('thechrisoshow')
      assert_equal 'Chris Roos',                      canonical_name_for('chrisroos')
      assert_equal 'Chris Roos',                      canonical_name_for("chris\100seagul.co.uk")
      assert_equal 'Chris Wanstrath',                 canonical_name_for("chris\100ozmm.org")
      assert_equal 'Chris Wanstrath',                 canonical_name_for('defunkt')
      assert_equal 'Christopher Redinger',            canonical_name_for('redinger')
      assert_equal 'Chriztian Steinmeier',            canonical_name_for("chriztian.steinmeier\100gmail.com")
      assert_equal 'Claudio Baccigalupo',             canonical_name_for('claudiob')
      assert_equal 'Claudio Baccigalupo',             canonical_name_for('claudiofullscreen')
      assert_equal 'Claudio Baccigalupo',             canonical_name_for('Claudio B.')
      assert_equal 'Clifford Heath',                  canonical_name_for('cjheath')
      assert_equal 'Clifford T. Matthews',            canonical_name_for('ctm')
      assert_equal 'Coda Hale',                       canonical_name_for('codahale')
      assert_equal 'Cody Fauser',                     canonical_name_for("codyfauser\100gmail.com")
      assert_equal 'Colman Nady',                     canonical_name_for("colman\100rominato.com")
      assert_equal 'Corey Haines',                    canonical_name_for('coreyhaines')
      assert_equal 'Corey Leveen',                    canonical_name_for('mntj')
      assert_equal 'Courtenay Gasking',               canonical_name_for('court3nay')
      assert_equal 'Courtenay Gasking',               canonical_name_for("court3nay\100gmail.com")
      assert_equal 'Courtenay Gasking',               canonical_name_for('courtenay')
      assert_equal 'Craig Davey',                     canonical_name_for('eigentone')
      assert_equal 'Craig Davey',                     canonical_name_for("eigentone\100gmail.com")
      assert_equal 'Cristi Balan',                    canonical_name_for('Cristi BALAN')
      assert_equal 'Daisuke Taniwaki',                canonical_name_for('dtaniwaki')
      assert_equal 'Damian Janowski',                 canonical_name_for('djanowski')
      assert_equal 'Damien Mathieu',                  canonical_name_for('dmathieu')
      assert_equal 'Dan Cheail',                      canonical_name_for('codeape')
      assert_equal 'Dan Croak',                       canonical_name_for('dancroak')
      assert_equal 'Dan Kaplan',                      canonical_name_for('dkaplan88')
      assert_equal 'Dan Kubb',                        canonical_name_for('dkubb')
      assert_equal 'Dan Manges',                      canonical_name_for('dcmanges')
      assert_equal 'Dan Peterson',                    canonical_name_for("dpiddy\100gmail.com")
      assert_equal 'Dan Sketcher',                    canonical_name_for("dansketcher\100gmail.com")
      assert_equal 'Dane Jensen',                     canonical_name_for('careo')
      assert_equal 'Daniel Cohen',                    canonical_name_for('danielc192')
      assert_equal 'Daniel Hobe',                     canonical_name_for("daniel\100nightrunner.com")
      assert_equal 'Daniel Morrison',                 canonical_name_for('danielmorrison')
      assert_equal 'Daniel Rodríguez Troitiño',       canonical_name_for('drodriguez')
      assert_equal 'Daniel Sheppard',                 canonical_name_for("daniels\100pronto.com.au")
      assert_equal 'Daniel Wanja',                    canonical_name_for("daniel\100nouvelles-solutions.com")
      assert_equal 'Danni Friedland',                 canonical_name_for('BlueHotDog')
      assert_equal 'Dave Dribin',                     canonical_name_for("dave-ml\100dribin.org")
      assert_equal 'Dave Goodchild',                  canonical_name_for('buddhamagnet')
      assert_equal 'Dave Lee',                        canonical_name_for("dave\100cherryville.org")
      assert_equal 'Dave Murphy',                     canonical_name_for('Wintermute')
      assert_equal 'Dave Naffis',                     canonical_name_for('naffis')
      assert_equal 'Dave Thomas',                     canonical_name_for('pragdave')
      assert_equal 'Dave Thomas',                     canonical_name_for("dave\100pragprog.com")
      assert_equal 'David A. Black',                  canonical_name_for('dblack')
      assert_equal 'David A. Black',                  canonical_name_for("dblack\100wobblini.net")
      assert_equal 'David Altenburg',                 canonical_name_for("gensym\100mac.com")
      assert_equal 'David Calavera',                  canonical_name_for('calavera')
      assert_equal 'David Calavera',                  canonical_name_for('david.calavera')
      assert_equal 'David Chelimsky',                 canonical_name_for('dchelimsky')
      assert_equal 'David Demaree',                   canonical_name_for('ddemaree')
      assert_equal 'David Dollar',                    canonical_name_for('ddollar')
      assert_equal 'David E. Wheeler',                canonical_name_for('Theory')
      assert_equal 'David Easley',                    canonical_name_for("easleydp\100gmail.com")
      assert_equal 'David Felstead',                  canonical_name_for("david.felstead\100gmail.com")
      assert_equal 'David Felstead',                  canonical_name_for("dfelstead\100site5.com")
      assert_equal 'David François',                  canonical_name_for('David FRANCOIS')
      assert_equal 'David François',                  canonical_name_for('davout')
      assert_equal 'David Heinemeier Hansson',        canonical_name_for('DHH')
      assert_equal 'David Heinemeier Hansson',        canonical_name_for('David')
      assert_equal 'David Morton',                    canonical_name_for("mortonda\100dgrmm.net")
      assert_equal 'David N. Welton',                 canonical_name_for('davidw')
      assert_equal 'David Raynes',                    canonical_name_for('rayners')
      assert_equal 'David Rice',                      canonical_name_for('davidjrice')
      assert_equal 'David Roetzel',                   canonical_name_for("rails\100roetzel.de")
      assert_equal 'David Rose',                      canonical_name_for("doppler\100gmail.com")
      assert_equal 'David Rupp',                      canonical_name_for("david\100ruppconsulting.com")
      assert_equal 'David Wang',                      canonical_name_for('dahakawang')
      assert_equal 'David Weitzman',                  canonical_name_for("dweitzman\100gmail.com")
      assert_equal 'Dawid Janczak',                   canonical_name_for('DawidJanczak')
      assert_equal 'Dee Zsombor',                     canonical_name_for('Dee.Zsombor')
      assert_equal 'Dee Zsombor',                     canonical_name_for("Dee.Zsombor\100gmail.com")
      assert_equal 'Dee Zsombor',                     canonical_name_for('zsombor')
      assert_equal 'Deirdre Saoirse',                 canonical_name_for("deirdre\100deirdre.net")
      assert_equal 'DeLynn Berry',                    canonical_name_for('DeLynn Barry')
      assert_equal 'DeLynn Berry',                    canonical_name_for('DeLynn')
      assert_equal 'DeLynn Berry',                    canonical_name_for('delynnb')
      assert_equal 'DeLynn Berry',                    canonical_name_for('Delynn')
      assert_equal 'DeLynn Berry',                    canonical_name_for('DeLynnB')
      assert_equal 'DeLynn Berry',                    canonical_name_for('DelynnB')
      assert_equal 'DeLynn Berry',                    canonical_name_for("delynn\100gmail.com")
      assert_equal 'DeLynn Berry',                    canonical_name_for('DeLynn B')
      assert_equal 'Demetrius Nunes',                 canonical_name_for('demetrius')
      assert_equal 'Demetrius Nunes',                 canonical_name_for('Demetrius')
      assert_equal 'Derek DeVries',                   canonical_name_for('devrieda')
      assert_equal 'Derrick Spell',                   canonical_name_for("derrickspell\100cdmplus.com")
      assert_equal 'Dev Mehta',                       canonical_name_for('dpmehta02')
      assert_equal 'Dick Davies',                     canonical_name_for('rasputnik')
      assert_equal 'Diego Giorgini',                  canonical_name_for('ogeidix')
      assert_equal 'Dieter Komendera',                canonical_name_for('kommen')
      assert_equal 'Dirkjan Bussink',                 canonical_name_for('dbussink')
      assert_equal 'Dmitrii Samoilov',                canonical_name_for('german')
      assert_equal 'Dmitrij Mjakotnyi',               canonical_name_for('kucaahbe')
      assert_equal 'Dmitriy Timokhin',                canonical_name_for('pager')
      assert_equal 'Dmitry Dedov',                    canonical_name_for('dm1try')
      assert_equal 'Dmitry Lipovoi',                  canonical_name_for('pleax')
      assert_equal 'Dmitry Vorotilin',                canonical_name_for('Dmitriy Vorotilin')
      assert_equal 'Dominic Sisneros',                canonical_name_for("dom\100sisna.com")
      assert_equal 'Don Park',                        canonical_name_for("don.park\100gmail.com")
      assert_equal 'Donald Piret',                    canonical_name_for("donald.piret\100synergetek.be")
      assert_equal 'Dr Nic Williams',                 canonical_name_for('drnic')
      assert_equal 'Dr Nic Williams',                 canonical_name_for('Dr Nic')
      assert_equal 'Duane Johnson',                   canonical_name_for('canadaduane')
      assert_equal 'Duane Johnson',                   canonical_name_for("duane.johnson\100gmail.com")
      assert_equal 'Duff OMelia',                     canonical_name_for("dj\100omelia.org")
      assert_equal 'Duncan Beevers',                  canonical_name_for('duncanbeevers')
      assert_equal 'Duncan Robertson',                canonical_name_for("duncan\100whomwah.com")
      assert_equal 'Dustin Curtis',                   canonical_name_for('dcurtis')
      assert_equal 'Dylan Thacker-Smith',             canonical_name_for('Dylan Smith')
      assert_equal 'Eaden McKee',                     canonical_name_for('Eadz')
      assert_equal 'Eaden McKee',                     canonical_name_for('eadz')
      assert_equal 'Eddie Cianci',                    canonical_name_for('defeated')
      assert_equal 'Eddie Stanley',                   canonical_name_for("eddiewould\100paradise.net.nz")
      assert_equal 'Edho Arief',                      canonical_name_for('edogawaconan')
      assert_equal 'Eduardo Cavazos',                 canonical_name_for('dharmatech')
      assert_equal 'Edward Betts',                    canonical_name_for("edward\100debian.org")
      assert_equal 'Eelco Lempsink',                  canonical_name_for("rails\10033lc0.net")
      assert_equal 'Egor Homakov',                    canonical_name_for("\100homakov")
      assert_equal 'Egor Homakov',                    canonical_name_for('homakov')
      assert_equal 'Egor Homakov',                    canonical_name_for('homa')
      assert_equal 'Eileen M. Uchitelle',             canonical_name_for('eileencodes')
      assert_equal 'Elan Feingold',                   canonical_name_for("elan\100bluemandrill.com")
      assert_equal 'Elijah Miller',                   canonical_name_for("elijah.miller\100gmail.com")
      assert_equal 'Elijah Miller',                   canonical_name_for('jqr')
      assert_equal 'Elliot Smith',                    canonical_name_for("elliot\100townx.org")
      assert_equal 'Elliot Winkler',                  canonical_name_for('mcmire')
      assert_equal 'Elliot Yates',                    canonical_name_for('ejy')
      assert_equal 'Eloy Duran',                      canonical_name_for('alloy')
      assert_equal 'Emili Parreño',                   canonical_name_for('eparreno')
      assert_equal 'Emili Parreño',                   canonical_name_for('Emili Parreno')
      assert_equal 'Emilio Tagua',                    canonical_name_for('miloops')
      assert_equal 'Eric Daspet',                     canonical_name_for("eric.daspet\100survol.net")
      assert_equal 'Eric Hodel',                      canonical_name_for("drbrain\100segment7.net")
      assert_equal 'Erik Abele',                      canonical_name_for("erik\100codefaktor.de")
      assert_equal 'Erik Ordway',                     canonical_name_for("ordwaye\100evergreen.edu")
      assert_equal 'Erik Terpstra',                   canonical_name_for("erik\100ruby-lang.nl")
      assert_equal 'Erlend Halvorsen',                canonical_name_for("ehalvorsen+rails\100runbox.com")
      assert_equal 'Ernesto Jimenez',                 canonical_name_for('ernesto.jimenez')
      assert_equal 'Ershad Kunnakkadan',              canonical_name_for('ershad')
      assert_equal 'Ershad Kunnakkadan',              canonical_name_for('Ershad K')
      assert_equal 'Esad Hajdarevic',                 canonical_name_for('esad')
      assert_equal 'Esad Hajdarevic',                 canonical_name_for("esad\100esse.at")
      assert_equal 'Eugene Pimenov',                  canonical_name_for('libc')
      assert_equal 'Evan DiBiase',                    canonical_name_for('edibiase')
      assert_equal 'Evan Henshaw-Plath',              canonical_name_for("evan\100protest.net")
      assert_equal 'Evan Weaver',                     canonical_name_for('evan')
      assert_equal 'Evgeny Zislis',                   canonical_name_for("evgeny.zislis\100gmail.com")
      assert_equal 'Fabien Mannessier',               canonical_name_for("fabien\100odilat.com")
      assert_equal 'Farley Knight',                   canonical_name_for('farleyknight')
      assert_equal 'Farzad Farid',                    canonical_name_for('farzy')
      assert_equal 'Fedot Praslov',                   canonical_name_for('fedot')
      assert_equal 'Felix Dominguez',                 canonical_name_for('dacat')
      assert_equal 'Ferdinand Svehla',                canonical_name_for("f.svehla\100gmail.com")
      assert_equal 'Ferdinand Svehla',                canonical_name_for('f.svehla')
      assert_equal 'Florian Munz',                    canonical_name_for('theflow')
      assert_equal 'Francesco Rodríguez',             canonical_name_for('Francesco Rodriguez')
      assert_equal 'François Beausoleil',             canonical_name_for('FranÃ§ois Beausolei')
      assert_equal 'François Beausoleil',             canonical_name_for('Francois Beausoleil')
      assert_equal 'François Beausoleil',             canonical_name_for("fbeausoleil\100ftml.net")
      assert_equal 'François Beausoleil',             canonical_name_for("francois.beausoleil\100gmail.com")
      assert_equal 'Frank Müller',                    canonical_name_for('suchasurge')
      assert_equal 'Frederick Cheung',                canonical_name_for("frederick.cheung\100gmail.com")
      assert_equal 'Frederick Cheung',                canonical_name_for('fcheung')
      assert_equal 'Frederick Cheung',                canonical_name_for('frederick.cheung')
      assert_equal 'Frederick Cheung',                canonical_name_for('Fred Cheung')
      assert_equal 'Frederico Macedo',                canonical_name_for('frederico')
      assert_equal 'G S Phani Kumar',                 canonical_name_for('gsphanikumar')
      assert_equal 'Gabe da Silveira',                canonical_name_for('dasil003')
      assert_equal 'Gabriel Gironda',                 canonical_name_for("gabriel\100gironda.org")
      assert_equal 'Gabriel Gironda',                 canonical_name_for("gabriel.gironda\100gmail.com")
      assert_equal 'Ganesh Kumar',                    canonical_name_for('ganesh')
      assert_equal 'Gaspard Bucher',                  canonical_name_for("g.bucher\100teti.ch")
      assert_equal 'Gavin Morrice',                   canonical_name_for('Bodacious')
      assert_equal 'Genki Takiuchi',                  canonical_name_for("takiuchi\100drecom.co.jp")
      assert_equal 'Geoff Buesing',                   canonical_name_for('gbuesing')
      assert_equal 'Geoff Buesing',                   canonical_name_for('Geoffrey Buesing')
      assert_equal 'Geoff Coffey',                    canonical_name_for('gwcoffey')
      assert_equal 'Geoff Garside',                   canonical_name_for('ggarside')
      assert_equal 'Geoff Jacobsen',                  canonical_name_for('jacott')
      assert_equal 'Geoffrey Grosenbach',             canonical_name_for('topfunky')
      assert_equal 'Geoffroy Lorieux',                canonical_name_for('glorieux')
      assert_equal 'Georg Friedrich',                 canonical_name_for('gfriedrich')
      assert_equal 'Giovanni Intini',                 canonical_name_for('intinig')
      assert_equal 'Giovanni Intini',                 canonical_name_for("medlar\100medlar.it")
      assert_equal 'Glen Gibb',                       canonical_name_for('grg')
      assert_equal 'Glenn Vanderburg',                canonical_name_for('glv')
      assert_equal 'Go Sueyoshi',                     canonical_name_for('sue445')
      assert_equal 'Gonzalo Rodríguez-Baltanás Díaz', canonical_name_for('Nerian')
      assert_equal 'Graeme Mathieson',                canonical_name_for('mathie')
      assert_equal 'Grant Hollingworth',              canonical_name_for("grant\100antiflux.org")
      assert_equal 'Greg Lappen',                     canonical_name_for("greg\100lapcominc.com")
      assert_equal 'Greg Miller',                     canonical_name_for('vertigoclinic')
      assert_equal 'Greg Spiers',                     canonical_name_for('gspiers')
      assert_equal 'Grzegorz Daniluk',                canonical_name_for("daniluk\100yahoo.com")
      assert_equal 'Guillaume Carbonneau',            canonical_name_for('guillaume')
      assert_equal 'Gustavo Leon',                    canonical_name_for('HPNeo')
      assert_equal 'Guy Naor',                        canonical_name_for("guy.naor\100famundo.com")
      assert_equal 'Hakan Ensari',                    canonical_name_for('hakanensari')
      assert_equal 'Hal Brodigan',                    canonical_name_for('postmodern')
      assert_equal 'Hampton Catlin',                  canonical_name_for("hcatlin\100gmail.com")
      assert_equal 'Hendrik Mans',                    canonical_name_for("hendrik\100mans.de")
      assert_equal 'Hendy Irawan',                    canonical_name_for('ceefour')
      assert_equal 'Henrik Nyh',                      canonical_name_for("henrik\100nyh.se")
      assert_equal 'Henrik Nyh',                      canonical_name_for('Henrik N')
      assert_equal 'Henrik Nyh',                      canonical_name_for('henrik')
      assert_equal 'Herryanto Siatono',               canonical_name_for('jugend')
      assert_equal 'Hiroshi Saito',                   canonical_name_for('hiroshi')
      assert_equal 'Hongli Lai (Phusion)',            canonical_name_for('Hongli Lai (Phusion')
      assert_equal 'Hongli Lai (Phusion)',            canonical_name_for('Hongli Lai')
      assert_equal 'Hongli Lai (Phusion)',            canonical_name_for('FooBarWidget')
      assert_equal 'Huiming Teo',                     canonical_name_for('Teo Hui Ming')
      assert_equal 'Ian White',                       canonical_name_for("ian.w.white\100gmail.com")
      assert_equal 'Ibrahim Abdullah',                canonical_name_for('simply-phi')
      assert_equal 'Ignazio Mostallino',              canonical_name_for('gnagno')
      assert_equal 'Igor Fedoronchuk',                canonical_name_for('Fivell')
      assert_equal 'Igor Fedoronchuk',                canonical_name_for('Igor')
      assert_equal 'Igor Guzak',                      canonical_name_for('igor04')
      assert_equal 'Indrek Juhkam',                   canonical_name_for('innu')
      assert_equal 'Innokenty Mikhailov',             canonical_name_for('gregolsen')
      assert_equal 'Ionatan Wiznia',                  canonical_name_for('iwiznia')
      assert_equal 'Irfan Adilovic',                  canonical_name_for('Irfy')
      assert_equal 'Isaac Feliu',                     canonical_name_for('isaacfeliu')
      assert_equal 'Isaac Reuben',                    canonical_name_for("isaac\100reuben.com")
      assert_equal 'Iván Vega',                       canonical_name_for('ivanvr')
      assert_equal 'J Kittiyachavalit',               canonical_name_for('jkit')
      assert_equal 'Jack Christensen',                canonical_name_for("jackc\100hylesanderson.com")
      assert_equal 'Jack Danger Canty',               canonical_name_for('Danger')
      assert_equal 'Jack Danger Canty',               canonical_name_for('danger')
      assert_equal 'Jacob Atzen',                     canonical_name_for('jacobat')
      assert_equal 'Jacob Fugal',                     canonical_name_for('lukfugl')
      assert_equal 'Jacob Straszynski',               canonical_name_for('jacobstr')
      assert_equal 'Jake Janovetz',                   canonical_name_for('janovetz')
      assert_equal 'Jakob Skjerning',                 canonical_name_for("jakob\100mentalized.net")
      assert_equal 'Jakob Skjerning',                 canonical_name_for('Jakob S')
      assert_equal 'James Adam',                      canonical_name_for("james.adam\100gmail.com")
      assert_equal 'James Adam',                      canonical_name_for('lazyatom')
      assert_equal 'James Coglan',                    canonical_name_for('jcoglan')
      assert_equal 'James Conroy-Finn',               canonical_name_for('jcf')
      assert_equal 'James Cox',                       canonical_name_for('imajes')
      assert_equal 'James Edward Gray II',            canonical_name_for('JEG2')
      assert_equal 'James Edward Gray II',            canonical_name_for("james\100grayproductions.net")
      assert_equal 'James Golick',                    canonical_name_for('jamesgolick')
      assert_equal 'James Healy',                     canonical_name_for('yob')
      assert_equal 'James Lindley',                   canonical_name_for('jlindley')
      assert_equal 'James Mead',                      canonical_name_for('floehopper')
      assert_equal 'James Megquier',                  canonical_name_for("james\100slashetc.com")
      assert_equal 'James Miller',                    canonical_name_for('bensie')
      assert_equal 'James Strachan',                  canonical_name_for('jstrachan')
      assert_equal 'James Tucker',                    canonical_name_for('raggi')
      assert_equal 'Jamie Hill',                      canonical_name_for('jamie')
      assert_equal 'Jamie Macey',                     canonical_name_for("jamie\100bravenet.com")
      assert_equal 'Jamie Macey',                     canonical_name_for("maceywj\100telus.net")
      assert_equal 'Jamie Orchard-Hays',              canonical_name_for("jamie\100dang.com")
      assert_equal 'Jamie van Dyke',                  canonical_name_for('fearoffish')
      assert_equal 'Jamis Buck',                      canonical_name_for('Jamis')
      assert_equal 'Jan Berdajs',                     canonical_name_for('MrBrdo')
      assert_equal 'Jan Berdajs',                     canonical_name_for('mrbrdo')
      assert_equal 'Jan De Poorter',                  canonical_name_for('DefV')
      assert_equal 'Jan Krutisch',                    canonical_name_for('halfbyte')
      assert_equal 'Jan Prill',                       canonical_name_for("JanPrill\100blauton.de")
      assert_equal 'Jan Schwenzien',                  canonical_name_for('jeanmartin')
      assert_equal 'Jan Xie',                         canonical_name_for('Jan')
      assert_equal 'Jared Haworth',                   canonical_name_for('jardeon')
      assert_equal 'Jarkko Laine',                    canonical_name_for('jarkko')
      assert_equal 'Jarkko Laine',                    canonical_name_for('Jarkko')
      assert_equal 'Jarkko Laine',                    canonical_name_for("jarkko\100jlaine.net")
      assert_equal 'Jason Frey',                      canonical_name_for('Jason Frey (Fryguy)')
      assert_equal 'Jason Garber',                    canonical_name_for('jgarber')
      assert_equal 'Jason Kaye',                      canonical_name_for('JayK31')
      assert_equal 'Jason Ketterman',                 canonical_name_for('anshkakashi')
      assert_equal 'Jason L Perry',                   canonical_name_for('ambethia')
      assert_equal 'Jason Roth',                      canonical_name_for('Jason')
      assert_equal 'Jason Stewart',                   canonical_name_for('jstewart')
      assert_equal 'Jason Stirk',                     canonical_name_for("jstirk\100oobleyboo.com")
      assert_equal 'Javier Ramírez',                  canonical_name_for('jramirez')
      assert_equal 'Jay Levitt',                      canonical_name_for("jay\100jay.fm")
      assert_equal 'Jean Baptiste Barth',             canonical_name_for('jbbarth')
      assert_equal 'Jean Helou',                      canonical_name_for("jean.helou\100gmail.com")
      assert_equal 'Jean Helou',                      canonical_name_for('jean.helou')
      assert_equal 'Jean-Philippe Bougie',            canonical_name_for("jp.bougie\100gmail.com")
      assert_equal 'Jeff Berg',                       canonical_name_for("jeff\100ministrycentered.com")
      assert_equal 'Jeff Cohen',                      canonical_name_for("cohen.jeff\100gmail.com")
      assert_equal 'Jeff Cole',                       canonical_name_for("rails\100jeffcole.net")
      assert_equal 'Jeff Dickey',                     canonical_name_for('dickeyxxx')
      assert_equal 'Jeff Dutil',                      canonical_name_for('jdutil')
      assert_equal 'Jeff Lindsay',                    canonical_name_for("progrium\100gmail.com")
      assert_equal 'Jeffrey Hardy',                   canonical_name_for('packagethief')
      assert_equal 'Jeffrey Moss',                    canonical_name_for("jeff\100opendbms.com")
      assert_equal 'Jens-Christian Fischer',          canonical_name_for("jcfischer\100gmail.com")
      assert_equal 'Jeong Changhoon',                 canonical_name_for('seapy')
      assert_equal 'Jeremy Durham',                   canonical_name_for("jeremydurham\100gmail.com")
      assert_equal 'Jeremy Evans',                    canonical_name_for("jeremyevans0\100gmail.com")
      assert_equal 'Jeremy Evans',                    canonical_name_for("code\100jeremyevans.net")
      assert_equal 'Jeremy Evans',                    canonical_name_for("jeremye\100bsa.ca.gov")
      assert_equal 'Jeremy Evans',                    canonical_name_for('jeremyevans')
      assert_equal 'Jeremy Hopple',                   canonical_name_for("jeremy\100jthopple.com")
      assert_equal 'Jeremy Jackson',                  canonical_name_for('jejacks0n')
      assert_equal 'Jeremy Kemper',                   canonical_name_for('bitsweat')
      assert_equal 'Jeremy Lightsmith',               canonical_name_for('stellsmi')
      assert_equal 'Jeremy McAnally',                 canonical_name_for('jeremymcnally')
      assert_equal 'Jeremy McAnally',                 canonical_name_for('jeremymcanally')
      assert_equal 'Jeremy Voorhis',                  canonical_name_for("jeremy\100planetargon.com")
      assert_equal 'Jeremy Voorhis',                  canonical_name_for('jvoorhis')
      assert_equal 'Jeroen van Ingen',                canonical_name_for('jeroeningen')
      assert_equal 'Jérôme Lipowicz',                 canonical_name_for('jerome')
      assert_equal 'Jerrett Taylor',                  canonical_name_for("jerrett\100bravenet.com")
      assert_equal 'Jesse Merriman',                  canonical_name_for("jessemerriman\100warpmail.net")
      assert_equal 'Jim Helm',                        canonical_name_for("perlguy\100gmail.com")
      assert_equal 'Jim Hughes',                      canonical_name_for('jeem')
      assert_equal 'Jim Meyer',                       canonical_name_for('purp')
      assert_equal 'Jim Winstead',                    canonical_name_for("jimw\100mysql.com")
      assert_equal 'Joe Ellis',                       canonical_name_for('joeellis')
      assert_equal 'Joe Ferris',                      canonical_name_for('jferris')
      assert_equal 'Joe Goldwasser',                  canonical_name_for("joe\100mjg2.com")
      assert_equal 'Joe Lewis',                       canonical_name_for('swapdisc')
      assert_equal 'Joel Smith',                      canonical_name_for('jbsmith86')
      assert_equal 'Joel Watson',                     canonical_name_for('watsonian')
      assert_equal 'Joerg Diekmann',                  canonical_name_for("joergd\100pobox.com")
      assert_equal 'Johan Sørensen',                  canonical_name_for('Johan Sorensen')
      assert_equal 'Johan Sørensen',                  canonical_name_for("johan\100textdrive.com")
      assert_equal 'Johan Sørensen',                  canonical_name_for("johan\100johansorensen.com")
      assert_equal 'Johan Sørensen',                  canonical_name_for('Johan Sörensen')
      assert_equal 'Johannes Barre',                  canonical_name_for('iGEL')
      assert_equal 'John Barnette',                   canonical_name_for('jbarnette')
      assert_equal 'John Barton',                     canonical_name_for('johnb')
      assert_equal 'John Dewey',                      canonical_name_for('retr0h')
      assert_equal 'John F. Douthat',                 canonical_name_for('johndouthat')
      assert_equal 'John J. Wang',                    canonical_name_for('wangjohn')
      assert_equal 'John Mettraux',                   canonical_name_for('jmettraux')
      assert_equal 'John Nunemaker',                  canonical_name_for("nunemaker\100gmail.com")
      assert_equal 'John Oxton',                      canonical_name_for("rails\100electricvisions.com")
      assert_equal 'John Pignata',                    canonical_name_for('Developer')
      assert_equal 'John Pignata',                    canonical_name_for('Jay Pignata')
      assert_equal 'John Sheets',                     canonical_name_for("dev\100metacasa.net")
      assert_equal 'John Sheets',                     canonical_name_for('jsheets')
      assert_equal 'John Warwick',                    canonical_name_for('jwarwick')
      assert_equal 'John Wells',                      canonical_name_for('jbwiv')
      assert_equal 'John Wilger',                     canonical_name_for('jwilger')
      assert_equal 'Johnson Wang',                    canonical_name_for('spyhole')
      assert_equal 'Jon Bright',                      canonical_name_for("jon\100siliconcircus.com")
      assert_equal 'Jon Evans',                       canonical_name_for('evansj')
      assert_equal 'Jon Evans',                       canonical_name_for("jon.evans\100pobox.com")
      assert_equal 'Jon Moses',                       canonical_name_for("jon\100burningbush.us")
      assert_equal 'Jon Olson',                       canonical_name_for("jsolson\100damogran.org")
      assert_equal 'Jon Seidel',                      canonical_name_for('JESii')
      assert_equal 'Jon Wood',                        canonical_name_for("jon\100blankpad.net")
      assert_equal 'Jon Wood',                        canonical_name_for("jon\100instance-design.co.uk")
      assert_equal 'Jonathan Bartlett',               canonical_name_for('johnnyb')
      assert_equal 'Jonathan del Strother',           canonical_name_for('catfish')
      assert_equal 'Jonathan del Strother',           canonical_name_for('Catfish')
      assert_equal 'Jonathan Garvin',                 canonical_name_for('jsgarvin')
      assert_equal 'Jonathan Goldman',                canonical_name_for('jonnii')
      assert_equal 'Jonathan Leighton',               canonical_name_for("turnip\100turnipspatch.com")
      assert_equal 'Jonathan Viney',                  canonical_name_for("jonathan\100bluewire.net.nz")
      assert_equal 'Jonathan Weiss',                  canonical_name_for('jweiss')
      assert_equal 'Jonathan Younger',                canonical_name_for("jonathan\100daikini.com")
      assert_equal 'Joost Baaij',                     canonical_name_for('joost')
      assert_equal 'Joost Baaij',                     canonical_name_for("joost\100spacebabies.nl")
      assert_equal 'Jordan McKible',                  canonical_name_for("jmckible\100gmail.com")
      assert_equal 'Jordan Staub',                    canonical_name_for('jordanstaub')
      assert_equal 'Jordi Bunster',                   canonical_name_for('jordi')
      assert_equal 'Jørgen Orehøj Erichsen',          canonical_name_for('joerichsen')
      assert_equal 'Jose Angel Cortinas',             canonical_name_for('jacortinas')
      assert_equal 'José Valim',                      canonical_name_for('josevalim')
      assert_equal 'José Valim',                      canonical_name_for("Jose' Valim")
      assert_equal 'Joseph A. Martin',                canonical_name_for("jmartin\100desertflood.com")
      assert_equal 'Joseph Hosteny',                  canonical_name_for("jhosteny\100mac.com")
      assert_equal 'Josh Goebel',                     canonical_name_for('yyyc514')
      assert_equal 'Josh Goebel',                     canonical_name_for('Dreamer3')
      assert_equal 'Josh Goebel',                     canonical_name_for("dreamer3\100gmail.com")
      assert_equal 'Josh Knowles',                    canonical_name_for("joshknowles\100gmail.com")
      assert_equal 'Josh Owens',                      canonical_name_for('queso')
      assert_equal 'Josh Peek',                       canonical_name_for('josh')
      assert_equal 'Josh Peek',                       canonical_name_for('Josh')
      assert_equal 'Josh Peek',                       canonical_name_for('Joshua Peek')
      assert_equal 'Josh Peek',                       canonical_name_for('joshpeek')
      assert_equal 'Josh Peek',                       canonical_name_for("josh\100joshpeek.com")
      assert_equal 'Josh Starcher',                   canonical_name_for("josh.starcher\100gmail.com")
      assert_equal 'Josh Susser',                     canonical_name_for('hasmanyjosh')
      assert_equal 'Josh Susser',                     canonical_name_for("josh\100hasmanythrough.com")
      assert_equal 'Joshua Sierles',                  canonical_name_for('jsierles')
      assert_equal 'Joshua Wehner',                   canonical_name_for('jaw6')
      assert_equal 'Juan David Pastas',               canonical_name_for('juanpastas')
      assert_equal 'Juan David Pastas',               canonical_name_for('juan david pastas')
      assert_equal 'Juan De Bravo',                   canonical_name_for('juandebravo')
      assert_equal 'Juanjo Bazán',                    canonical_name_for('juanjo.bazan')
      assert_equal 'Juanjo Bazán',                    canonical_name_for('Juanjo Bazan')
      assert_equal 'Julian Doherty',                  canonical_name_for('madlep')
      assert_equal 'Julian Tarkhanov',                canonical_name_for("me\100julik.nl")
      assert_equal 'Julian Tarkhanov',                canonical_name_for('julik')
      assert_equal 'Julien Portalier',                canonical_name_for('ysbaddaden')
      assert_equal 'Jun Jiang',                       canonical_name_for('jasl')
      assert_equal 'Justin Ball',                     canonical_name_for('jbasdf')
      assert_equal 'Justin French',                   canonical_name_for('justinfrench')
      assert_equal 'Justin Mecham',                   canonical_name_for("justin\100aspect.net")
      assert_equal 'Kamal Fariz Mahyuddin',           canonical_name_for('kamal')
      assert_equal 'Kamil Kukura',                    canonical_name_for('kamk')
      assert_equal 'Karel Miarka',                    canonical_name_for("kajism\100yahoo.com")
      assert_equal 'Karel Minařík',                   canonical_name_for('karmi')
      assert_equal 'Karel Minařík',                   canonical_name_for('Karel Minarik')
      assert_equal 'Karol Bucek',                     canonical_name_for('kares')
      assert_equal 'Kaspar Schiess',                  canonical_name_for("eule\100space.ch")
      assert_equal 'Kasper Timm Hansen',              canonical_name_for('Timm')
      assert_equal 'Kazuhiro Yoshida',                canonical_name_for("moriq\100moriq.com")
      assert_equal 'Kazuhiro Yoshida',                canonical_name_for("kazuhiko\100fdiary.net")
      assert_equal 'Kazuhiro Yoshida',                canonical_name_for('moriq')
      assert_equal 'Keegan Quinn',                    canonical_name_for("keegan\100thebasement.org")
      assert_equal 'Kei Shiratsuchi',                 canonical_name_for('kei')
      assert_equal 'Keith Gautreaux',                 canonical_name_for('kaygee')
      assert_equal 'Keith Gautreaux',                 canonical_name_for('kgautreaux')
      assert_equal 'Keith Morrison',                  canonical_name_for("keithm\100infused.org")
      assert_equal 'Ken Barker',                      canonical_name_for("ken.barker\100gmail.com")
      assert_equal 'Ken Gerrard',                     canonical_name_for('backspace')
      assert_equal 'Ken Kunz',                        canonical_name_for("kennethkunz\100gmail.com")
      assert_equal 'Ken Miller',                      canonical_name_for("kenneth.miller\100bitfield.net")
      assert_equal 'Kenta Okamoto',                   canonical_name_for('chocoby')
      assert_equal 'Kenta Tanoue',                    canonical_name_for('regonn')
      assert_equal 'Kevin Barnes',                    canonical_name_for("vinbarnes\100gmail.com")
      assert_equal 'Kevin Chavanne',                  canonical_name_for('kevcha')
      assert_equal 'Kevin Clark',                     canonical_name_for("kevin.clark\100gmal.com")
      assert_equal 'Kevin Clark',                     canonical_name_for("kevin.clark\100gmail.com")
      assert_equal 'Kevin Clark',                     canonical_name_for("Kevin Clark kevin.clark\100gmail.com")
      assert_equal 'Kevin Jackson',                   canonical_name_for("foamdino\100gmail.com")
      assert_equal 'Kevin Smith',                     canonical_name_for('codebrulee')
      assert_equal 'Kevin Watt',                      canonical_name_for("kevin\100writesoon.com")
      assert_equal 'Kevin Williams',                  canonical_name_for("kevwil\100gmail.com")
      assert_equal 'Kim Shrier',                      canonical_name_for("kim\100tinker.com")
      assert_equal 'Kir Shatrov',                     canonical_name_for('kirs')
      assert_equal 'Kir Shatrov',                     canonical_name_for('Kir')
      assert_equal 'Kjetil Lerøen',                   canonical_name_for("leroen\100gmail.com")
      assert_equal 'Koichi Tsutsumi',                 canonical_name_for("hakuja\100hakuja.net")
      assert_equal 'Kornelius Kalnbach',              canonical_name_for('murphy')
      assert_equal 'Kornelius Kalnbach',              canonical_name_for("murpyh\100rubychan.de")
      assert_equal 'Kornelius Kalnbach',              canonical_name_for("murphy\100cYcnus.de")
      assert_equal 'Kouhei Sutou',                    canonical_name_for('kou')
      assert_equal 'Krishna Kotecha',                 canonical_name_for('krishna')
      assert_equal 'Kristopher Chambers',             canonical_name_for("kristopher.chambers\100gmail.com")
      assert_equal 'Kristopher Chambers',             canonical_name_for('kris_chambers')
      assert_equal 'Krzysztof Knapik',                canonical_name_for('knapo')
      assert_equal 'Kubo Takehiro',                   canonical_name_for('kubo')
      assert_equal 'Kuldeep Aggarwal',                canonical_name_for('KD')
      assert_equal 'Kym McInerney',                   canonical_name_for('holodigm')
      assert_equal 'Kym McInerney',                   canonical_name_for('Kym')
      assert_equal 'Kyosuke Morohashi',               canonical_name_for('moro')
      assert_equal 'Lakshan Perera',                  canonical_name_for('laktek')
      assert_equal 'Lakshan Perera',                  canonical_name_for('lakshan')
      assert_equal 'Larry Lv',                        canonical_name_for('larrylv')
      assert_equal 'Larry Williams',                  canonical_name_for("larrywilliams1\100gmail.com")
      assert_equal 'Lars Francke',                    canonical_name_for("l.francke\100gmx.de")
      assert_equal 'Lars Kanis',                      canonical_name_for("kanis\100comcard.de")
      assert_equal 'Lars Pind',                       canonical_name_for('lars pind')
      assert_equal 'Lars Pind',                       canonical_name_for("lars\100pinds.com")
      assert_equal 'Lars Pind',                       canonical_name_for('Lars pind')
      assert_equal 'Lars Pind',                       canonical_name_for("lars\100pind.com")
      assert_equal 'Laurel Fan',                      canonical_name_for("laurel\100gorgorg.org")
      assert_equal 'Laurel Fan',                      canonical_name_for('laurelfan')
      assert_equal 'Lauro Caetano',                   canonical_name_for('laurocaetano')
      assert_equal 'Lawrence Pit',                    canonical_name_for('lawrence')
      assert_equal 'Lebin Sebastian F',               canonical_name_for('libin')
      assert_equal 'Lee Jensen',                      canonical_name_for('outerim')
      assert_equal 'Lee Marlow',                      canonical_name_for('lmarlow')
      assert_equal 'Lee Marlow',                      canonical_name_for("lmarlow\100yahoo.com")
      assert_equal "Lee O'Mara",                      canonical_name_for("lee\100omara.ca")
      assert_equal 'Leif Eriksen',                    canonical_name_for('leriksen')
      assert_equal 'Lennon Day-Reynolds',             canonical_name_for('rcoder')
      assert_equal 'Leo Lou',                         canonical_name_for('l4u')
      assert_equal 'Leon Breedt',                     canonical_name_for('Leon Bredt')
      assert_equal 'Leslie A. Hensley',               canonical_name_for("hensleyl\100papermountain.org")
      assert_equal 'Leung Ho Kuen',                   canonical_name_for('PikachuEXE')
      assert_equal 'Lewis Jubb',                      canonical_name_for("minimudboy\100gmail.com")
      assert_equal 'Lihan Li',                        canonical_name_for('lihanli')
      assert_equal 'Lihan Li',                        canonical_name_for('lihan')
      assert_equal 'Lim Chee Hau',                    canonical_name_for('ch33hau')
      assert_equal 'Logy Laps',                       canonical_name_for('logylaps')
      assert_equal 'Lon Baker',                       canonical_name_for("lon\100speedymac.com")
      assert_equal 'Loren Johnson',                   canonical_name_for('lorenjohnson')
      assert_equal 'Lori Holden',                     canonical_name_for('lholden')
      assert_equal 'Louis St-Amour',                  canonical_name_for("LouisStAmour\100gmail.com")
      assert_equal 'Lourens Naudé',                   canonical_name_for('Lourens Naude')
      assert_equal 'Luca Guidi',                      canonical_name_for('l.guidi')
      assert_equal 'Lucas Catón',                     canonical_name_for('Lucas Caton')
      assert_equal 'Lugovoi Nikolai',                 canonical_name_for("meadow.nnick\100gmail.com")
      assert_equal 'Luismi Cavallé',                  canonical_name_for('cavalle')
      assert_equal 'Luismi Cavallé',                  canonical_name_for('cavelle')
      assert_equal 'Lukas Rieder',                    canonical_name_for('Overbryd')
      assert_equal 'Łukasz Sarnacki',                 canonical_name_for('Lukasz Sarnacki')
      assert_equal 'Łukasz Strzałkowski',             canonical_name_for('Lukasz Strzalkowski')
      assert_equal 'Luke Ludwig',                     canonical_name_for('lukeludwig')
      assert_equal 'Luke Redpath',                    canonical_name_for("contact\100lukeredpath.co.uk")
      assert_equal 'Magan Adam',                      canonical_name_for('Adam89')
      assert_equal 'maiha',                           canonical_name_for('anna')
      assert_equal 'maiha',                           canonical_name_for("maiha\100wota.jp")
      assert_equal 'maiha',                           canonical_name_for("anna\100wota.jp")
      assert_equal 'Maik Schmidt',                    canonical_name_for('maik schmidt')
      assert_equal 'Maik Schmidt',                    canonical_name_for("contact\100maik-schmidt.de")
      assert_equal 'Manfred Stienstra',               canonical_name_for("m.stienstra\100fngtps.com")
      assert_equal 'Manfred Stienstra',               canonical_name_for('manfred')
      assert_equal 'Manu J',                          canonical_name_for('Manu')
      assert_equal 'Manuel Holtgrewe',                canonical_name_for("purestorm\100ggnore.net")
      assert_equal 'Marc-André Cournoyer',            canonical_name_for('macournoyer')
      assert_equal 'Marc-André Lafortune',            canonical_name_for('Marc-Andre Lafortune')
      assert_equal 'Marc Huffnagle',                  canonical_name_for('mhuffnagle')
      assert_equal 'Marc Love',                       canonical_name_for('marclove')
      assert_equal 'Marcel Molina Jr.',               canonical_name_for('Marcel Molina')
      assert_equal 'Marcel Molina Jr.',               canonical_name_for('Marcel')
      assert_equal 'Marcel Molina Jr.',               canonical_name_for('Marcel Mollina Jr.')
      assert_equal 'Marcel Molina Jr.',               canonical_name_for('marcel')
      assert_equal 'Marcel Molina Jr.',               canonical_name_for('noradio')
      assert_equal 'Marcel Molina Jr.',               canonical_name_for('Marcel Molina Jr')
      assert_equal 'Marcello Nuccio',                 canonical_name_for('marcenuc')
      assert_equal 'Marcin Szczepański',              canonical_name_for("marcin\100junkheap.net")
      assert_equal 'Marcos Tapajós',                  canonical_name_for('Marcos Tapajos')
      assert_equal 'Mario Zigliotto',                 canonical_name_for('mariozig')
      assert_equal 'Mariusz Pękala',                  canonical_name_for('Arsen7')
      assert_equal 'Marjan Hratson',                  canonical_name_for('gmarik')
      assert_equal 'Mark A. Richman',                 canonical_name_for('mrichman')
      assert_equal 'Mark Daggett',                    canonical_name_for('heavysixer')
      assert_equal 'Mark H. Wilkinson',               canonical_name_for('mhw')
      assert_equal 'Mark Imbriaco',                   canonical_name_for("mark.imbriaco\100pobox.com")
      assert_equal 'Mark J. Titorenko',               canonical_name_for('mtitorenko')
      assert_equal 'Mark James',                      canonical_name_for("mrj\100bigpond.net.au")
      assert_equal 'Mark Lane',                       canonical_name_for('DrMark')
      assert_equal 'Mark R. James',                   canonical_name_for('mrj')
      assert_equal 'Mark Somerville',                 canonical_name_for('Spakman')
      assert_equal 'Mark Van Holstyn',                canonical_name_for('lotswholetime')
      assert_equal 'Mark W. Foster',                  canonical_name_for('mfoster')
      assert_equal 'Markus Roberts',                  canonical_name_for("MarkusQ\100reality.com")
      assert_equal 'Marshall Roch',                   canonical_name_for('mroch')
      assert_equal 'Marten Veldthuis',                canonical_name_for('Marten')
      assert_equal 'Martin Emde',                     canonical_name_for("zraii\100comcast.net")
      assert_equal 'Martin Emde',                     canonical_name_for("martin.emde\100gmail.com")
      assert_equal 'Martin Gamsjaeger',               canonical_name_for('snusnu')
      assert_equal 'Martin Schuerrer',                canonical_name_for('MSch')
      assert_equal 'Martin Schuerrer',                canonical_name_for('Martin Schürrer')
      assert_equal 'Martin Schuerrer',                canonical_name_for("\100MSch")
      assert_equal 'Masashi Shimbo',                  canonical_name_for("shimbo\100is.naist.jp")
      assert_equal 'Mason Hale',                      canonical_name_for('flowdelic')
      assert_equal 'Mathieu Arnold',                  canonical_name_for("mat\100absolight.fr")
      assert_equal 'Mathieu Jobin',                   canonical_name_for("somekool\100gmail.com")
      assert_equal 'Mathieu Ravaux',                  canonical_name_for('mathieuravaux')
      assert_equal 'Mats Persson',                    canonical_name_for("mats\100imediatec.co.uk")
      assert_equal 'Matt Aimonetti',                  canonical_name_for('matt')
      assert_equal 'Matt Bauer',                      canonical_name_for('mattbauer')
      assert_equal 'Matt Boehlig',                    canonical_name_for('Matt B.')
      assert_equal 'Matt Freels',                     canonical_name_for('freels')
      assert_equal 'Matt Lyon',                       canonical_name_for('mattly')
      assert_equal 'Matt Margolis',                   canonical_name_for("matt\100mattmargolis.net")
      assert_equal 'Matt Mower',                      canonical_name_for("self\100mattmower.com")
      assert_equal 'Matt Palmer',                     canonical_name_for('mpalmer')
      assert_equal 'Matt Palmer',                     canonical_name_for("mpalmer\100hezmatt.org")
      assert_equal 'Matt Parrish',                    canonical_name_for("mparrish\100pearware.org")
      assert_equal 'Matt Pelletier',                  canonical_name_for("pelletierm\100eastmedia.net")
      assert_equal 'Matthew Bass',                    canonical_name_for('pelargir')
      assert_equal 'Matthew Deiters',                 canonical_name_for('mdeiters')
      assert_equal 'Matthew Painter',                 canonical_name_for("mail\100matthewpainter.co.uk")
      assert_equal 'Matthew Rudy Jacobs',             canonical_name_for('MatthewRudy')
      assert_equal 'Matthew Vincent',                 canonical_name_for('neshmi')
      assert_equal 'Matthew Walker',                  canonical_name_for("matthew\100walker.wattle.id.au")
      assert_equal 'Mattt Thompson',                  canonical_name_for("\100mattt")
      assert_equal 'Max Mitchell',                    canonical_name_for('mazuhl')
      assert_equal 'Maxime Réty',                     canonical_name_for('maximerety')
      assert_equal 'Maxime Réty',                     canonical_name_for('Maxime RETY')
      assert_equal 'Melih Arda Yalçiner',             canonical_name_for('Wizard')
      assert_equal 'Mica Eked',                       canonical_name_for('mica eked')
      assert_equal 'Micah Alles',                     canonical_name_for("alles\100atomicobject.com")
      assert_equal 'Michael Cetrulo',                 canonical_name_for('Samus_')
      assert_equal 'Michael Coyne',                   canonical_name_for('mikeycgto')
      assert_equal 'Michael Daines',                  canonical_name_for("me\100mdaines.com")
      assert_equal 'Michael Dewey',                   canonical_name_for("mike\100michaeldewey.org")
      assert_equal 'Michael Galero',                  canonical_name_for('mikong')
      assert_equal 'Michael Grosser',                 canonical_name_for('grosser')
      assert_equal 'Michael Hoffman',                 canonical_name_for('hoffm')
      assert_equal 'Michael Hutchinson',              canonical_name_for('mhutchin')
      assert_equal 'Michael Kintzer',                 canonical_name_for('rockrep')
      assert_equal 'Michael Klishin',                 canonical_name_for('Michael S. Klishin')
      assert_equal 'Michael Klishin',                 canonical_name_for('antares')
      assert_equal 'Michael Koziarski',               canonical_name_for('Koz')
      assert_equal 'Michael Koziarski',               canonical_name_for('nzkoz')
      assert_equal 'Michael Minter',                  canonical_name_for('michaelminter')
      assert_equal 'Michael Pearson',                 canonical_name_for('Mip Earson')
      assert_equal 'Michael Raidel',                  canonical_name_for("raidel\100onemail.at")
      assert_equal 'Michael Schoen',                  canonical_name_for('Michael A. Schoen')
      assert_equal 'Michael Schoen',                  canonical_name_for("schoenm\100earthlink.net")
      assert_equal 'Michael Schubert',                canonical_name_for("michael\100schubert")
      assert_equal 'Michael Schubert',                canonical_name_for("michael\100schubert.cx")
      assert_equal 'Michael Schuerig',                canonical_name_for("michael\100schuerig.de")
      assert_equal 'Michael Schuerig',                canonical_name_for('Michael Shuerig')
      assert_equal 'Michael Sheakoski',               canonical_name_for('GMFlash')
      assert_equal 'Michal Šafránek',                 canonical_name_for("wejn\100box.cz")
      assert_equal 'Michiaki Baba',                   canonical_name_for("babie7a0\100ybb.ne.jp")
      assert_equal 'Miguel Fernández',                canonical_name_for('Miguel')
      assert_equal 'Miguel Fernández',                canonical_name_for('miguelff')
      assert_equal 'Mike Boone',                      canonical_name_for('boone')
      assert_equal 'Mike Breen',                      canonical_name_for('hardbap')
      assert_equal 'Mike Clark',                      canonical_name_for("mike\100clarkware.com")
      assert_equal 'Mike Gunderloy',                  canonical_name_for('Michael Gunderloy')
      assert_equal 'Mike Laster',                     canonical_name_for("mlaster\100metavillage.com")
      assert_equal 'Mike Mangino',                    canonical_name_for("mmangino\100elevatedrails.com")
      assert_equal 'Mike Naberezny',                  canonical_name_for('mnaberez')
      assert_equal 'Mike Subelsky',                   canonical_name_for('subelsky')
      assert_equal 'Mikel Lindsaar',                  canonical_name_for('mikel')
      assert_equal 'Mikel Lindsaar',                  canonical_name_for('raasdnil')
      assert_equal 'Miklós Fazekas',                  canonical_name_for('mfazekas')
      assert_equal 'Mislav Marohnić',                 canonical_name_for('mislav')
      assert_equal 'Mislav Marohnić',                 canonical_name_for('mislaw')
      assert_equal 'Mislav Marohnić',                 canonical_name_for("mislav\100nippur.irb.hr")
      assert_equal 'Mislav Marohnić',                 canonical_name_for('Mislav Marohnic')
      assert_equal 'Moses Hohman',                    canonical_name_for('moses')
      assert_equal 'Murahashi Sanemat Kenichi',       canonical_name_for('sanemat')
      assert_equal 'Murray Steele',                   canonical_name_for('h-lame')
      assert_equal 'Nacho Caballero',                 canonical_name_for('nachocab')
      assert_equal 'Nathan Weizenbaum',               canonical_name_for('Nex3')
      assert_equal 'Nathaniel Talbott',               canonical_name_for('ntalbott')
      assert_equal 'Neil Wilson',                     canonical_name_for('NeilW')
      assert_equal 'Nicholas Greenfield',             canonical_name_for('Greenie0506')
      assert_equal 'Nicholas Lee',                    canonical_name_for("emptysands\100gmail.com")
      assert_equal 'Nicholas Seckar',                 canonical_name_for('Ulysses')
      assert_equal 'Nick Cox',                        canonical_name_for('thenickcox')
      assert_equal 'Nick Kallen',                     canonical_name_for('nkallen')
      assert_equal 'Nick Plante',                     canonical_name_for('zapnap')
      assert_equal 'Nick Sieger',                     canonical_name_for('nicksieger')
      assert_equal 'Nick Sieger',                     canonical_name_for('Nick')
      assert_equal 'Nick Sieger',                     canonical_name_for("nicksieger\100gmail.com")
      assert_equal 'Nicolas Blanco',                  canonical_name_for('slainer68')
      assert_equal 'Nicolas Cavigneaux',              canonical_name_for('Bounga')
      assert_equal 'Nicolás Hock Isaza',              canonical_name_for('Nicolas Hock Isaza')
      assert_equal 'Nicolas Pouillard',               canonical_name_for("nicolas.pouillard\100gmail.com")
      assert_equal 'Nicolás Sanguinetti',             canonical_name_for('foca')
      assert_equal 'Nicolás Sanguinetti',             canonical_name_for('Nicolas Sanguinetti')
      assert_equal 'Nik Wakelin',                     canonical_name_for('nik.wakelin')
      assert_equal 'Nik Wakelin',                     canonical_name_for('nik.kakelin')
      assert_equal 'Nikita Loskutov',                 canonical_name_for('cnaize')
      assert_equal 'Nikolay Petrachkov',              canonical_name_for('jastix')
      assert_equal 'Nils-Helge Garli Hegvik',         canonical_name_for('nilsga')
      assert_equal 'Nils Jonsson',                    canonical_name_for("nils\100alumni.rice.edu")
      assert_equal 'Nishant Tuteja',                  canonical_name_for('nishant-cyro')
      assert_equal 'Noam Gagliardi Rabinovich',       canonical_name_for('noam')
      assert_equal 'Nobuhiro Imai',                   canonical_name_for("nov\100yo.rim.or.jp")
      assert_equal 'Nobuhiro Imai',                   canonical_name_for('Nobuhiro IMAI')
      assert_equal 'Nobukazu Matake',                 canonical_name_for('nov')
      assert_equal 'Norbauer Inc',                    canonical_name_for('norbauer')
      assert_equal 'Norbert Crombach',                canonical_name_for('norbert')
      assert_equal 'Norman Elton',                    canonical_name_for("normelton\100gmail.com")
      assert_equal 'Obie Fernandez',                  canonical_name_for('ObieFernandez')
      assert_equal 'okkez',                           canonical_name_for("okkez000\100gmail.com")
      assert_equal 'Oleg Andreev',                    canonical_name_for('oleganza')
      assert_equal 'Oleg Frolov',                     canonical_name_for("oleg.frolov\100gmail.com")
      assert_equal 'Oleg Pudeyev',                    canonical_name_for("pudeyo\100rpi.com")
      assert_equal 'Oliver Legg',                     canonical_name_for('Olly Legg')
      assert_equal 'Olivier Ansaldi',                 canonical_name_for("olivier_ansaldi\100yahoo.com")
      assert_equal 'Olli Rissanen',                   canonical_name_for('Noemj')
      assert_equal 'Olly Headey',                     canonical_name_for('lylo')
      assert_equal 'Orta Therox',                     canonical_name_for('orta')
      assert_equal 'Otto Hilska',                     canonical_name_for('mutru')
      assert_equal 'Pablo Astigarraga',               canonical_name_for('pote')
      assert_equal 'Pablo Astigarraga',               canonical_name_for('PoTe')
      assert_equal 'Pascal Belloncle',                canonical_name_for('psq')
      assert_equal 'Pascal Terjan',                   canonical_name_for("pterjan\100mandriva.com")
      assert_equal 'Pat Maddox',                      canonical_name_for("pergesu\100gmail.com")
      assert_equal 'Patrick Burleson',                canonical_name_for('pburleson')
      assert_equal 'Patrick Burleson',                canonical_name_for("pburleson\100gmail.com")
      assert_equal 'Patrick Hurley',                  canonical_name_for("phurley\100gmail.com")
      assert_equal 'Patrick Joyce',                   canonical_name_for('patrick.t.joyce')
      assert_equal 'Patrick Lenz',                    canonical_name_for("patrick\100lenz.sh")
      assert_equal 'Pau',                             canonical_name_for('nosolopau')
      assert_equal 'Paul Butcher',                    canonical_name_for("paul\100paulbutcher.com")
      assert_equal 'Paul Carey',                      canonical_name_for('paulccarey')
      assert_equal 'Paul Hinze',                      canonical_name_for('phinze')
      assert_equal 'Paul Smith',                      canonical_name_for("paul\100cnt.org")
      assert_equal 'Paweł Mikołajewski',              canonical_name_for('dfens')
      assert_equal 'Pelle Braendgaard',               canonical_name_for('pelle')
      assert_equal 'Pelle Braendgaard',               canonical_name_for('Pelle')
      assert_equal 'Per Wigren',                      canonical_name_for('Tuxie')
      assert_equal 'Per Wigren',                      canonical_name_for("tuxie\100dekadance.se")
      assert_equal 'Perry Flinn',                     canonical_name_for('pbflinn')
      assert_equal 'Perry Smith',                     canonical_name_for('pedz')
      assert_equal 'Pete Brown',                      canonical_name_for('beerlington')
      assert_equal 'Pete Yandell',                    canonical_name_for('notahat')
      assert_equal 'Peter Haight',                    canonical_name_for('Dawnthorn')
      assert_equal 'Peter Michaux',                   canonical_name_for("petermichaux\100gmail.com")
      assert_equal 'Peter Schröder',                  canonical_name_for('phoet')
      assert_equal 'Peter Williams',                  canonical_name_for('pezra')
      assert_equal 'Phil Bogle',                      canonical_name_for("philbogle\100gmail.com")
      assert_equal 'Phil Hagelberg',                  canonical_name_for("technomancy\100gmail.com")
      assert_equal 'Phil Hagelberg',                  canonical_name_for('technomancy')
      assert_equal 'Phil Lee',                        canonical_name_for('asmega')
      assert_equal 'Phil Orwig',                      canonical_name_for('cluon')
      assert_equal 'Philip Hallstrom',                canonical_name_for('phallstrom')
      assert_equal 'Philip Ross',                     canonical_name_for("phil.ross\100gmail.com")
      assert_equal 'Philipp Weißensteiner',           canonical_name_for('Philipp Weissensteiner')
      assert_equal 'Philippe April',                  canonical_name_for("ror\100philippeapril.com")
      assert_equal 'Phillip J. Birmingham',           canonical_name_for("phillip\100pjbsoftware.com")
      assert_equal 'Piers Cawley',                    canonical_name_for("pdcawley\100bofh.org.uk")
      assert_equal 'Piotr Banasik',                   canonical_name_for("piotr\100t-p-l.com")
      assert_equal 'Piotr Banasik',                   canonical_name_for('piotr')
      assert_equal 'Pirogov Evgenij',                 canonical_name_for('gmile')
      assert_equal 'Pivotal Labs',                    canonical_name_for('pivotal')
      assert_equal 'Pivotal Labs',                    canonical_name_for('Pivotal  Labs')
      assert_equal 'PJ Hyett',                        canonical_name_for("pjhyett\100gmail.com")
      assert_equal 'Prakash Murthy',                  canonical_name_for('prakashmurthy')
      assert_equal 'Pratik Naik',                     canonical_name_for('Pratik')
      assert_equal 'Pratik Naik',                     canonical_name_for('pratik')
      assert_equal 'Pratik Naik',                     canonical_name_for('lifo')
      assert_equal 'Pratik Naik',                     canonical_name_for('lifofifo')
      assert_equal 'Pravin Mishra',                   canonical_name_for('diatmpravin')
      assert_equal 'Rafael Mendonça França',          canonical_name_for('Rafael França')
      assert_equal 'Rahul P. Chaudhari',              canonical_name_for('Rahul Chaudhari')
      assert_equal 'Rahul P. Chaudhari',              canonical_name_for('RAHUL CHAUDHARI')
      assert_equal 'Rainer Blessing',                 canonical_name_for('RainerBlessing')
      assert_equal 'Rajarshi Das',                    canonical_name_for('rajarshi')
      assert_equal 'Rajarshi Das',                    canonical_name_for('RAJARSHI DAS')
      assert_equal 'Rajarshi Das',                    canonical_name_for('rajcybage')
      assert_equal 'Rajarshi Das',                    canonical_name_for('Rajarshi')
      assert_equal 'Rajarshi Das',                    canonical_name_for('RAJARSHI')
      assert_equal 'Rajarshi Das',                    canonical_name_for('rajars2576')
      assert_equal 'Ramon Quezada',                   canonical_name_for('rayq')
      assert_equal 'Ramon Quezada',                   canonical_name_for('rpq')
      assert_equal 'Raphael Bauduin',                 canonical_name_for("raphinou\100yahoo.com")
      assert_equal 'Raphael Lee',                     canonical_name_for('Raphomet')
      assert_equal 'Ravil Bayramgalin',               canonical_name_for('brainopia')
      assert_equal 'Rein Henrichs',                   canonical_name_for('ReinH')
      assert_equal "Remco van 't Veer",               canonical_name_for('remvee')
      assert_equal 'Rémy Coutable',                   canonical_name_for('remy')
      assert_equal 'Rémy Coutable',                   canonical_name_for("remy.coutable\100gmail.com")
      assert_equal 'Rémy Coutable',                   canonical_name_for("rymai\100rymai.com")
      assert_equal 'Rémy Coutable',                   canonical_name_for('rymai')
      assert_equal 'Rich Collins',                    canonical_name_for("richcollins\100gmail.com")
      assert_equal 'Rich Collins',                    canonical_name_for('richcollins')
      assert_equal 'Richard Schneeman',               canonical_name_for('schneems')
      assert_equal 'Richard Schneeman',               canonical_name_for('Schneems')
      assert_equal 'Richard Schneeman',               canonical_name_for("\100schneems")
      assert_equal 'Rick Bradley',                    canonical_name_for("rick\100rickbradley.com")
      assert_equal 'Rick DeNatale',                   canonical_name_for('RubyRedRick')
      assert_equal 'Rick Olson',                      canonical_name_for('Rick')
      assert_equal 'Rick Olson',                      canonical_name_for('rick')
      assert_equal 'Rick Olson',                      canonical_name_for('Rick Olsen')
      assert_equal 'Rick Olson',                      canonical_name_for("technoweenie\100gmail.com")
      assert_equal 'Rick Olson',                      canonical_name_for('Rich Olson')
      assert_equal 'Riley Lynch',                     canonical_name_for('Riley')
      assert_equal 'Riley Lynch',                     canonical_name_for('teleological')
      assert_equal 'Rizwan Reza',                     canonical_name_for('rizwanreza')
      assert_equal 'Rob Anderton',                    canonical_name_for('Rob')
      assert_equal 'Rob Biedenharn',                  canonical_name_for("Rob\100AgileConsultingLLC.com")
      assert_equal 'Rob Biedenharn',                  canonical_name_for('rabiedenharn')
      assert_equal 'Rob Halff',                       canonical_name_for("info\100rhalff.com")
      assert_equal 'Rob Rasmussen',                   canonical_name_for("rob.rasmussen\100gmail.com")
      assert_equal 'Rob Sanheim',                     canonical_name_for("rsanheim\100gmail.com")
      assert_equal 'Rob Sanheim',                     canonical_name_for("rob\100thinkrelevance.com")
      assert_equal 'Rob Sanheim',                     canonical_name_for('rsanheim')
      assert_equal 'Robby Russell',                   canonical_name_for('robbyrussell')
      assert_equal 'Robby Russell',                   canonical_name_for("robby\100planetargon.com")
      assert_equal 'Robert Evans',                    canonical_name_for('revans')
      assert_equal 'Robert Pankowecki',               canonical_name_for('Robert Pankowecki (Gavdi)')
      assert_equal 'Robert Speicher',                 canonical_name_for('rspeicher')
      assert_equal 'Roberto Miranda',                 canonical_name_for('robertomiranda')
      assert_equal 'Robin Fisher',                    canonical_name_for('robinjfisher')
      assert_equal 'Robin H. Johnson',                canonical_name_for("robbat2\100gentoo.org")
      assert_equal 'Roderick van Domburg',            canonical_name_for('roderickvd')
      assert_equal 'Rodney Ramdas',                   canonical_name_for("rramdas\100gmail.com")
      assert_equal 'Rodrigo Navarro',                 canonical_name_for('reu')
      assert_equal 'Rohit Arondekar',                 canonical_name_for('rohit')
      assert_equal 'Roman Dittert',                   canonical_name_for('RomD')
      assert_equal 'Roman Le Négrate',                canonical_name_for('Roman2K')
      assert_equal 'Roman Le Négrate',                canonical_name_for('Roman Le Negrate')
      assert_equal 'Ron DiFrango',                    canonical_name_for("rdifrango\100captechventures.com")
      assert_equal 'Ross Kaffenberger',               canonical_name_for('Ross Kaffenburger')
      assert_equal 'Ruben Nine',                      canonical_name_for("ruben.nine\100gmail.com")
      assert_equal 'Russell Norris',                  canonical_name_for('rsl')
      assert_equal 'Russell Norris',                  canonical_name_for('RSL')
      assert_equal 'Ruy Asan',                        canonical_name_for('rubyruy')
      assert_equal 'Ryan Bates',                      canonical_name_for('ryanb')
      assert_equal 'Ryan Bigg',                       canonical_name_for('Radar')
      assert_equal 'Ryan Daigle',                     canonical_name_for('rwdaigle')
      assert_equal 'Ryan Davis (ryepup)',             canonical_name_for('ryepup')
      assert_equal 'Ryan Davis (zenspider)',          canonical_name_for('zenspider')
      assert_equal 'Ryan Davis (zenspider)',          canonical_name_for("ryand-ruby\100zenspider.com")
      assert_equal 'Ryan Davis (zenspider)',          canonical_name_for('Ryan Davis')
      assert_equal 'Ryan Duryea',                     canonical_name_for('aguynamedryan')
      assert_equal 'Ryan Heath',                      canonical_name_for('rpheath')
      assert_equal 'Ryan McGeary',                    canonical_name_for('rmm5t')
      assert_equal 'Ryan Raaum',                      canonical_name_for("ryan.raaum\100gmail.com")
      assert_equal 'Ryan Tomayko',                    canonical_name_for("rtomayko\100gmail.com")
      assert_equal 'Sachin Singh',                    canonical_name_for('sachin87')
      assert_equal 'Sachin Singh',                    canonical_name_for('Sachin87')
      assert_equal 'Sam Elliott',                     canonical_name_for('Samuel Elliott')
      assert_equal 'Sam Granieri',                    canonical_name_for('sjgman9')
      assert_equal 'Sam Kirchmeier',                  canonical_name_for("sam.kirchmeier\100gmail.com")
      assert_equal 'Sandra Metz',                     canonical_name_for("sandra.metz\100duke.edu")
      assert_equal 'Sasha Gerrand',                   canonical_name_for('sgerrand')
      assert_equal 'Scott Bronson',                   canonical_name_for('bronson')
      assert_equal 'Scott Fleckenstein',              canonical_name_for('nullstyle')
      assert_equal 'Scott Laird',                     canonical_name_for("scott\100sigkill.org")
      assert_equal 'Scott Mace',                      canonical_name_for("rscottmace\100gmail.com")
      assert_equal 'Scott Meade',                     canonical_name_for('smeade')
      assert_equal 'Scott Raymond',                   canonical_name_for("sco\100scottraymond.net")
      assert_equal 'Scott Reilly',                    canonical_name_for('coffee2code')
      assert_equal 'Scott Schram',                    canonical_name_for('ScottSchram')
      assert_equal 'Scott Willson',                   canonical_name_for('scottwillson')
      assert_equal 'Scott Willson',                   canonical_name_for('scott_willson')
      assert_equal 'Sean Dent',                       canonical_name_for('doabit')
      assert_equal 'Sean Geoghegan',                  canonical_name_for('seangeo')
      assert_equal 'Sean Griffin',                    canonical_name_for("\100sgrif")
      assert_equal 'Sean Griffin',                    canonical_name_for('sgrif')
      assert_equal 'Sean Hussey',                     canonical_name_for('seanhussey')
      assert_equal 'Sean T Allen',                    canonical_name_for("sean\100ardismg.com")
      assert_equal 'Sebastian Delmont',               canonical_name_for("sd\100notso.net")
      assert_equal 'Sebastian Graessl',               canonical_name_for('bastilian')
      assert_equal 'Sebastian Kanthak',               canonical_name_for("sebastian.kanthak\100muehlheim.de")
      assert_equal 'Sebastian Kanthak',               canonical_name_for('sebastian.kanthak')
      assert_equal 'Sebastian Kanthak',               canonical_name_for('skanthak')
      assert_equal 'Sebastian Spieszko',              canonical_name_for('ciastek')
      assert_equal 'Serg Podtynnyi',                  canonical_name_for('shtirlic')
      assert_equal 'Serge Balyuk',                    canonical_name_for('bgipsy')
      assert_equal 'Sergey Karpesh',                  canonical_name_for('kasper')
      assert_equal 'Sergey Kojin',                    canonical_name_for("sergeykojin\100gmail.com")
      assert_equal 'Sergey Nartimov',                 canonical_name_for('lest')
      assert_equal 'Sergio Gil',                      canonical_name_for('Sergio Gil Pérez de la Manga')
      assert_equal 'Seth Ladd',                       canonical_name_for('sethladd')
      assert_equal 'Seth Rasmussen',                  canonical_name_for('loincloth')
      assert_equal 'Shu-yu Guo',                      canonical_name_for("arc\100uchicago.edu")
      assert_equal 'Shugo Maeda',                     canonical_name_for('shugo')
      assert_equal 'Shugo Maeda',                     canonical_name_for("shugo\100ruby-lang.org")
      assert_equal 'Si Jobling',                      canonical_name_for('Si')
      assert_equal 'Simon Arnaud',                    canonical_name_for("maznawak\100nerim.net")
      assert_equal 'Simon Harris',                    canonical_name_for("simon\100redhillconsulting.com.au")
      assert_equal 'Simon Harris',                    canonical_name_for('haruki_zaemon')
      assert_equal 'Simon Jefford',                   canonical_name_for('simonjefford')
      assert_equal 'Simon Moore',                     canonical_name_for('saimonmoore')
      assert_equal 'Simon Stapleton',                 canonical_name_for("simon.stapleton\100gmail.com")
      assert_equal 'Slava Markevich',                 canonical_name_for('markevich')
      assert_equal 'Soichiro Ogawa',                  canonical_name_for('ogawaso')
      assert_equal 'Solomon White',                   canonical_name_for("solo\100gatelys.com")
      assert_equal 'Sonny Michaud',                   canonical_name_for('sonnym')
      assert_equal 'St. Louis Ruby Users Group',      canonical_name_for("stlruby\100googlegroups.com")
      assert_equal 'Stanislav Sobolev',               canonical_name_for('Stanislav')
      assert_equal 'Starr Horne',                     canonical_name_for("starr\100starrnhorne.com")
      assert_equal 'Stefan Hollmann',                 canonical_name_for('sthollmann')
      assert_equal 'Stefan Kaes',                     canonical_name_for("skaes\100web.de")
      assert_equal 'Stefan Kaes',                     canonical_name_for('skaes')
      assert_equal 'Stefan Kaes',                     canonical_name_for('Skaes')
      assert_equal 'Stefan Kaes',                     canonical_name_for('skaes.web.de')
      assert_equal 'Stefan Kaes',                     canonical_name_for('stefan')
      assert_equal 'Stefan Kaes',                     canonical_name_for('Stefan')
      assert_equal 'Stefan Kaes',                     canonical_name_for('skae')
      assert_equal 'Stefan Kaes',                     canonical_name_for('skaen')
      assert_equal 'Stefan Kaes',                     canonical_name_for('Stephan Kaes')
      assert_equal 'Stephen Blackstone',              canonical_name_for('sblackstone')
      assert_equal 'Stephen Haberman',                canonical_name_for("stephenh\100chase3000.com")
      assert_equal 'Stephen St. Martin',              canonical_name_for('Steve St. Martin')
      assert_equal 'Stephen Sykes',                   canonical_name_for('sdsykes')
      assert_equal 'Stephen Touset',                  canonical_name_for("stephen\100touset.org")
      assert_equal 'Stephen Veiss',                   canonical_name_for('sveiss')
      assert_equal 'Stephen Veit',                    canonical_name_for("sveit\100tradeharbor.com")
      assert_equal 'Steve Purcell',                   canonical_name_for("stephen_purcell\100yahoo.com")
      assert_equal 'Steve Richert',                   canonical_name_for('laserlemon')
      assert_equal 'Steven Bristol',                  canonical_name_for('stevenbristol')
      assert_equal 'Steven Bristol',                  canonical_name_for('steve')
      assert_equal 'Steven Soroka',                   canonical_name_for("ssoroka78\100gmail.com")
      assert_equal 'Steven Soroka',                   canonical_name_for('ssoroka')
      assert_equal 'Stian Grytøyr',                   canonical_name_for("stian\100grytoyr.net")
      assert_equal 'Sudara Williams',                 canonical_name_for('Sudara')
      assert_equal 'Sung-hee Kang',                   canonical_name_for('paranoiase Kang')
      assert_equal 'Sung-hee Kang',                   canonical_name_for('paranoiase')
      assert_equal 'Sunny Ripert',                    canonical_name_for('Sunny')
      assert_equal 'Sur Max',                         canonical_name_for('sur')
      assert_equal 'Surendra Singhi',                 canonical_name_for("ssinghi\100kreeti.com")
      assert_equal 'Sven Klemm',                      canonical_name_for("sven\100c3d2.de")
      assert_equal 'Sven Kräuter',                    canonical_name_for('Sven Kraeuter | 5v3n')
      assert_equal 'Sven Kräuter',                    canonical_name_for('5v3n')
      assert_equal 'Sven Kräuter',                    canonical_name_for('Sven Kraeuter')
      assert_equal 'Tadas Tamošauskas',               canonical_name_for('Tadas Tamosauskas')
      assert_equal 'Takayuki Matsubara',              canonical_name_for('ma2gedev')
      assert_equal 'Takoyaki Kamen',                  canonical_name_for('タコ焼き仮面')
      assert_equal 'Tal Rotbart',                     canonical_name_for('redbeard')
      assert_equal 'Tarmo Tänav',                     canonical_name_for('tarmo')
      assert_equal 'Tarmo Tänav',                     canonical_name_for('tarmo_t')
      assert_equal 'Tarmo Tänav',                     canonical_name_for('Tarmo Täna')
      assert_equal 'Taryn East',                      canonical_name_for("rubygirl\100taryneast.org")
      assert_equal 'Taryn East',                      canonical_name_for('taryneast')
      assert_equal 'Taryn East',                      canonical_name_for('taryn')
      assert_equal 'Tekin Suleyman',                  canonical_name_for('Tekin')
      assert_equal 'Teng Siong Ong',                  canonical_name_for('siong1987')
      assert_equal 'Thierry Zires',                   canonical_name_for('zires')
      assert_equal 'Thijs van der Vossen',            canonical_name_for('thijsv')
      assert_equal 'Thijs van der Vossen',            canonical_name_for("thijs\100vandervossen.net")
      assert_equal 'Thijs van der Vossen',            canonical_name_for("thijs\100fngtps.com")
      assert_equal 'Thillai Arasu',                   canonical_name_for('genlinux')
      assert_equal 'Thillai Arasu',                   canonical_name_for('JudeArasu')
      assert_equal 'Thillai Arasu',                   canonical_name_for('Jude Arasu')
      assert_equal 'Thomas Enebo',                    canonical_name_for("tom.enebo\100gmail.com")
      assert_equal 'Thomas Fuchs',                    canonical_name_for('madrobby')
      assert_equal 'Thomas Fuchs',                    canonical_name_for("thomas\100fesch.at")
      assert_equal 'Thomas R. Koll',                  canonical_name_for('TomK32')
      assert_equal 'Thomas Sawyer',                   canonical_name_for('trans')
      assert_equal 'Thomas Watson Steen',             canonical_name_for('watson')
      assert_equal 'Thong Kuah',                      canonical_name_for('kuahyeow')
      assert_equal 'Tiago Macedo',                    canonical_name_for('tmacedo')
      assert_equal 'Tieg Zaharia',                    canonical_name_for('tzaharia')
      assert_equal 'Tietew',                          canonical_name_for("tietew\100tietew.net")
      assert_equal 'Tim Carpenter',                   canonical_name_for('timc')
      assert_equal 'Tim Fletcher',                    canonical_name_for("twoggle\100gmail.com")
      assert_equal 'Tim Forbes',                      canonical_name_for('leprasmurf')
      assert_equal 'Tim Lucas',                       canonical_name_for("t.lucas\100toolmantim.com")
      assert_equal 'Tim Lucas',                       canonical_name_for('toolmantim')
      assert_equal 'Tim Pope',                        canonical_name_for('tpope')
      assert_equal 'Tim Pope',                        canonical_name_for('Time Pope')
      assert_equal 'Tim Pope',                        canonical_name_for("rails\100tpope.info")
      assert_equal 'Tim Pope',                        canonical_name_for('pope')
      assert_equal 'Tim Trautmann',                   canonical_name_for("timct\100mac.com")
      assert_equal 'Titus Ramczykowski',              canonical_name_for('_tiii')
      assert_equal 'Tobias Lütke',                    canonical_name_for('Tobias Luetke')
      assert_equal 'Tobias Lütke',                    canonical_name_for('TobiasLuetke')
      assert_equal 'Tobias Lütke',                    canonical_name_for('xal')
      assert_equal 'Tobias Lütke',                    canonical_name_for('Tobias Luekte')
      assert_equal 'Toby Cabot',                      canonical_name_for('toby cabot')
      assert_equal 'Todd Gehman',                     canonical_name_for('todd')
      assert_equal 'Todd Gehman',                     canonical_name_for("todd\100robotcoop.com")
      assert_equal 'Todd Hanson',                     canonical_name_for("hanson\100surgery.wisc.edu")
      assert_equal 'Tom Brice',                       canonical_name_for('tomtoday')
      assert_equal 'Tom Brice',                       canonical_name_for("tomtoday\100gmail.com")
      assert_equal 'Tom Fakes',                       canonical_name_for("tom\100craz8.com")
      assert_equal 'Tom Hoefer',                      canonical_name_for('thoefer')
      assert_equal 'Tom Lieber',                      canonical_name_for("thomas\100columbus.rr.com")
      assert_equal 'Tom Moertel',                     canonical_name_for("tom\100moertel.com")
      assert_equal 'Tom Mornini',                     canonical_name_for("tmornini\100infomania.com")
      assert_equal 'Tom Preston-Werner',              canonical_name_for('mojombo')
      assert_equal 'Tom Stone',                       canonical_name_for('iaddict')
      assert_equal 'Tom Ward',                        canonical_name_for('tomafro')
      assert_equal 'Tom Ward',                        canonical_name_for('Tom ward')
      assert_equal 'Tom Ward',                        canonical_name_for("tom\100popdog.net")
      assert_equal 'Tomohiro Hashidate',              canonical_name_for('joker1007')
      assert_equal 'Tony Jian',                       canonical_name_for('簡煒航')
      assert_equal 'Toshinori Kajihara',              canonical_name_for('kennyj')
      assert_equal 'Travis Vander Hoop',              canonical_name_for('vanderhoop')
      assert_equal 'Trek Glowacki',                   canonical_name_for('trek')
      assert_equal 'Trent Ogren',                     canonical_name_for('misfo')
      assert_equal 'Trevor Squire',                   canonical_name_for('protocool')
      assert_equal 'Troels Petersen',                 canonical_name_for('tnp')
      assert_equal 'Tsukasa OISHI',                   canonical_name_for('tsukasaoishi')
      assert_equal 'Tyler Kiley',                     canonical_name_for("tyler\100kianta.com")
      assert_equal 'Tyler Kovacs',                    canonical_name_for("tyler.kovacs\100gmail.com")
      assert_equal 'Uģis Ozols',                      canonical_name_for('Ugis Ozols')
      assert_equal 'Vasili Kachalko',                 canonical_name_for('dreamfall')
      assert_equal 'Victor Babenko',                  canonical_name_for('virusman')
      assert_equal 'Victor Jalencas',                 canonical_name_for("victor-ronr-trac\100carotena.net")
      assert_equal 'Vijay Dev',                       canonical_name_for('vijay')
      assert_equal 'Vijay Dev',                       canonical_name_for('vijaydev')
      assert_equal 'Vitalii Khustochka',              canonical_name_for("xyctka\100gmail.com")
      assert_equal 'Vitalii Khustochka',              canonical_name_for('khustochka')
      assert_equal 'Vitaly Kushner',                  canonical_name_for('vitaly')
      assert_equal 'Vlad Romascanu',                  canonical_name_for('vladr')
      assert_equal 'Volodymyr Shatsky',               canonical_name_for('shockone')
      assert_equal 'Volodymyr Shatsky',               canonical_name_for('shock_one')
      assert_equal 'Wang Chun',                       canonical_name_for('wangchun')
      assert_equal 'Wes Gamble',                      canonical_name_for('weyus')
      assert_equal 'Wesley Beary',                    canonical_name_for('geemus')
      assert_equal 'Wesley Moxam',                    canonical_name_for('wmoxam')
      assert_equal 'Wesley Moxam',                    canonical_name_for('wesley.moxam')
      assert_equal 'Will Bryant',                     canonical_name_for('will.bryant')
      assert_equal 'Will Bryant',                     canonical_name_for('Will')
      assert_equal 'Will Harris',                     canonical_name_for('wharris')
      assert_equal 'Wilson Bilkovich',                canonical_name_for('wilson')
      assert_equal 'Wilson Bilkovich',                canonical_name_for("wilsonb\100gmail.com")
      assert_equal 'Winston Teo Yong Wei',            canonical_name_for('Winston')
      assert_equal 'Wolfgang Klinger',                canonical_name_for("wolfgang\100stufenlos.net")
      assert_equal 'Xavier Defrang',                  canonical_name_for('xavier')
      assert_equal 'Xavier Noria',                    canonical_name_for('fxn')
      assert_equal 'Xavier Shay',                     canonical_name_for('xaviershay')
      assert_equal 'Yanhao Yang',                     canonical_name_for('YanhaoYang')
      assert_equal 'Yehuda Katz',                     canonical_name_for('wycats')
      assert_equal 'Yoji Shidara',                    canonical_name_for("darashi\100gmail.com")
      assert_equal 'Yonatan Feldman',                 canonical_name_for("yon\100milliped.com")
      assert_equal 'Yonatan Feldman',                 canonical_name_for('yon')
      assert_equal 'Yossef Mendelssohn',              canonical_name_for('ymendel')
      assert_equal 'Yuki Minamiya',                   canonical_name_for('yuki3738')
      assert_equal 'Yuri Leikind',                    canonical_name_for('leikind')
      assert_equal 'Yurii Rashkovskii',               canonical_name_for("yrashk\100fp.org.ua")
      assert_equal 'Yurii Rashkovskii',               canonical_name_for("yrashk\100gmail.com")
      assert_equal 'Yury Korolev',                    canonical_name_for('yury')
      assert_equal 'Yves Senn',                       canonical_name_for('senny')
      assert_equal 'Zac Williams',                    canonical_name_for('jzw')
      assert_equal 'Zach Dennis',                     canonical_name_for('zdennis')
      assert_equal 'Zachary Holt',                    canonical_name_for("z\100wzph.com")
      assert_equal 'Zack Chandler',                   canonical_name_for('zackchandler')
      assert_equal 'Zheng Jia',                       canonical_name_for('zhengjia')
    end
  end
end
